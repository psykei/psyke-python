name: check
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
      - 'dependabot/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'renovate.json'
      - '.gitignore'
  pull_request:
  workflow_dispatch:
env:
  PROJECT_NAME: psyke-python
  WORKFLOW: check
  TEST_SUBMODULE: psykei/psyke-pytest
jobs:
  create-test-predictors-if-needed:
    runs-on: ubuntu-latest
    name: Create test predictors if needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Get Python Version
        id: get-python-version
        run: echo ::set-output name=version::$(cat .python-version)

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ steps.get-python-version.outputs.version }}

      - name: Restore Python dependencies
        run: pip install -r requirements.txt

      - name: Create missing predictors
        run: python setup.py create_test_predictors

      - name: Submodule update
        run: |
          pushd test/resources
          git config user.email "bot@noreply.github.com"
          git config user.name "CI bot"
          git remote set-url origin https://x-access-token:${{ secrets.TRIGGER_GITHUB_ACTION }}@github.com/${{ env.TEST_SUBMODULE }}
          (git add predictors/*.onnx tests/*.csv datasets/*.csv) || echo 'nothing to add'
          (git commit -m 'predictors update from workflows') || echo 'nothing to commit'
          (git push) || echo 'nothing to push'
  run-unit-tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.9.0'
          - '3.9.1'
          - '3.9.2'
          - '3.9.3'
          - '3.9.4'
          - '3.9.5'
          - '3.9.6'
          - '3.9.7'
    runs-on: ${{ matrix.os }}
    name: Run tests on Python ${{ matrix.python-version }}, on ${{ matrix.os }}
    timeout-minutes: 45
    concurrency:
      group: ${{ github.workflow }}-run-unit-tests-${{ matrix.python-version }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    needs:
      - create-test-predictors-if-needed
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Restore Python dependencies
        run: pip install -r requirements.txt

      - name: Test
        run: python -m unittest